// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+m",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus"
  },
  {
    "key": "Enter",
    "command": "runCommands",
    "args": {
      "commands": [
        "explorer.openAndPassFocus",
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },

  {
    "key": "ctrl+k",
    "command": "editor.action.showDefinitionPreviewHover",
    "when": "editorTextFocus"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },

  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.nextEditor"
  },

  {
    "key": "f2",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "f3",
    "command": "workbench.action.showAllSymbols"
  },

  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.moveEditorRightInGroup"
  },

  // shitty solution but stays for now
  {
    "key": "shift+escape",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closeSidebar",
        "closeReferenceSearch",
        "editor.action.inlineSuggest.hide",
        "cancelSelection",
        "removeSecondaryCursors",
        "closeBreakpointWidget",
        "workbench.action.hideComment",
        "closeFindWidget",
        "leaveSnippet",
        "closeMarkersNavigation",
        "closeQuickDiff",
        "closeParameterHints",
        "hideSuggestWidget",
        "cancelLinkedEditingInput",
        "cancelRenameInput",
        "workbench.action.closeQuickOpen",
        "workbench.action.terminal.hideFind",
        "closeReferenceSearch",
        "hideCodeActionWidget"
      ]
    }
  },

  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "f2",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+h",
    "command": "-editor.action.accessibilityHelpOpenHelpLink",
    "when": "accessibilityHelpIsShown"
  }
]
